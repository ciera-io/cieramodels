// BP 7.1.6 content: Package syschar: 3 persistence-version: 7.1.6

within MicrowaveOven::components::MicrowaveOven is

  package Functions is
    @dialect("oal");
    function CancelCooking() is
      @noparse
      select any oven from instances of MO_O;
      generate MO_O4:'cancel_cooking'  to oven;
      @endnoparse
    end function;

    @dialect("oal");
    function CloseDoor() is
      @noparse
      select any door from instances of MO_D;
      generate MO_D2:'close'  to door;
      @endnoparse
    end function;

    @dialect("oal");
    function DecreasePower() is
      @noparse
      select any tube from instances of MO_MT;
      generate MO_MT2:'decrease_power' to tube;
      @endnoparse
    end function;

    @dialect("oal");
    function DefineOven() is
      @noparse
      // Create the instances in the system.
      create object instance mo of MO_O;
      
      assign mo.remaining_cooking_time = 0;
      
      create object instance tube of MO_MT;
      relate mo to tube across R1;
      assign tube.current_power_output = tube_wattage::high;
      
      create object instance light of MO_IL;
      relate mo to light across R2;
      
      create object instance beeper of MO_B;
      relate mo to beeper across R3;
      
      create object instance door of MO_D;
      relate mo to door across R4;
      assign door.is_secure = false;
      
      create object instance turntable of MO_TRN;
      relate mo to turntable across R5;
      @endnoparse
    end function;

    @dialect("oal");
    function IncreasePower() is
      @noparse
      select any tube from instances of MO_MT;
      generate MO_MT1:'increase_power'  to tube;
      @endnoparse
    end function;

    @dialect("oal");
    function OpenDoor() is
      @noparse
      select any door from instances of MO_D;
      generate MO_D1:'release'  to door;
      @endnoparse
    end function;

    @dialect("oal");
    function SpecifyCookingPeriod(cookingPeriod: in integer) is
      @noparse
      // cooking period is to be specified in seconds and must be converted to usec in order
      // to be compatible with BP's view of time
      
      timePeriod = 1000000 * param.cookingPeriod;
      select any oven from instances of MO_O;
      generate MO_O8:'cooking_period' (period:timePeriod) to oven;
      @endnoparse
    end function;

    @dialect("oal");
    function StartCooking() is
      @noparse
      select any oven from instances of MO_O;
      generate MO_O3:'start_cooking'  to oven;
      @endnoparse
    end function;

    @dialect("oal");
    function TestSequence1() is
      @noparse
      create object instance testSequence of MO_TS;
      generate MO_TS2 to testSequence;
      @endnoparse
    end function;

    @dialect("oal");
    function init() is
      @noparse
      /*
      // set up command line options
      CMD::register_value( name:"cwd", value_name:"root_dir", usage:"base working directory", default_value:".", required:false );
      CMD::register_value( name:"i", value_name:"input_file", usage:"input file", default_value:"", required:false );
      CMD::read_command_line();
      
      // load up instances
      input_file = CMD::get_value( name:"i" );
      if ( "" != input_file )
        SQL::load_file( file:CMD::get_value( name:"cwd" ) + "/" + input_file );
      end if;
      */
      
      select any oven from instances of MO_O;
      if ( empty oven )
        ::DefineOven();
        ::TestSequence1();
      end if;
      @endnoparse
    end function;

  end package;

end;
