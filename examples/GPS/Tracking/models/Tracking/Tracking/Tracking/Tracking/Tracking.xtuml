// BP 7.1.6 content: Package syschar: 3 persistence-version: 7.1.6

within Tracking::Tracking::Tracking is

  package Tracking is
    class Achievement;
    class Display;
    class Goal;
    class GoalSpec;
    class HeartRateSample;
    class LapMarker;
    class TrackLog;
    class TrackPoint;
    class WorkoutSession;
    class WorkoutTimer;
    //! Indicates the first track point for a track log.  In
    //! other words, this is the first recorded location in
    //! a chronological series of track points that make up
    //! a track log.
    //! Established when the first track point is recorded and
    //! exists for the lifetime of the track log.
    relationship R1 is TrackLog conditionally has_first one TrackPoint,
                       TrackPoint conditionally is_start_of one TrackLog;

    //! Chronologically sequences the track points in a track log.
    //! Established each time a new track point is recorded and
    //! exists for the lifetime of the track log.
    relationship R2 is TrackPoint conditionally follows one TrackPoint,
                       TrackPoint conditionally preceeds one TrackPoint;

    //! Represents the most recently recorded track point
    //! in a track log.
    //! Established each time a new track point is recorded and
    //! removed from the previously recorded track point at the same time.
    relationship R3 is TrackLog conditionally has_last one TrackPoint,
                       TrackPoint conditionally is_last_for one TrackLog;

    //! Established when a workout session is created and
    //! exists for the duration of the session.
    relationship R4 is TrackLog unconditionally represents_path_for one WorkoutSession,
                       WorkoutSession unconditionally captures_path_in one TrackLog;

    //! Established when a lap marker is created and exists
    //! for the lifetime of the track log.
    relationship R5 is LapMarker unconditionally marks_end_of_lap_in one TrackLog,
                       TrackLog conditionally has_laps_defined_by many LapMarker;

    //! Established when a heart rate sample is created and exists for
    //! the duration of the workout session.
    relationship R6 is HeartRateSample unconditionally was_collected_during one WorkoutSession,
                       WorkoutSession conditionally tracks_heart_rate_over_time_as many HeartRateSample;

    //! Established when a workout session is created and
    //! exists for the duration of the session.
    relationship R7 is Display unconditionally indicates_current_status_of one WorkoutSession,
                       WorkoutSession unconditionally current_status_indicated_on one Display;

    //! Established when a workout session is created and exists for the duration
    //! of the session.
    relationship R8 is WorkoutSession unconditionally is_timed_by one WorkoutTimer,
                       WorkoutTimer unconditionally acts_as_the_stopwatch_for one WorkoutSession;

    //! Established when goal execution begins and removed when it ends.
    relationship R9 is Goal unconditionally specified_by one GoalSpec,
                       GoalSpec conditionally specifies many Goal;

    //! Established when a goal specification is created and exists
    //! for the duration of a workout session.
    relationship R10 is GoalSpec unconditionally included_in one WorkoutSession,
                        WorkoutSession conditionally includes many GoalSpec;

    //! Established when a goal begins executing and removed when it ends.
    relationship R11 is Goal conditionally is_currently_executing_within one WorkoutSession,
                        WorkoutSession conditionally is_currently_executing one Goal;

    //! Established when an achievement period begins and exists for
    //! the duration of the associated workout session.
    relationship R12 is Achievement unconditionally specifies_achievement_of one Goal,
                        Goal conditionally has_recorded many Achievement;

    //! Established when a goal completes execution and exists for the
    //! duration of the associated workout session.
    relationship R13 is Goal unconditionally was_executed_within one WorkoutSession,
                        WorkoutSession conditionally has_executed many Goal;

    //! Represents an open achievement record, one for which a start time has been recorded
    //! but no end time has yet been recorded.  In other words, this association exists only
    //! while the currently executing goal is being achieved.
    relationship R14 is Achievement conditionally is_open_for one Goal,
                        Goal conditionally has_open one Achievement;

  end package;

end;
