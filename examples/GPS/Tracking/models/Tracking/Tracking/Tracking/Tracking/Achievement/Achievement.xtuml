// BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

within Tracking::Tracking::Tracking::Tracking is

  //! Each instance represents one contiguous period of time during
  //! which a particular goal was being met (achieved).
  @key_letters("Achievement");
  @class_num(10);
  class Achievement is

    @ref_mode("referred_to");
    @use_referred_to_prefix(root_name="session_startTime");
    session_startTime: referential (R12.Goal.session_startTime, R14.Goal.session_startTime) timestamp;

    @ref_mode("referred_to");
    @use_referred_to_prefix(root_name="spec_sequenceNumber");
    spec_sequenceNumber: referential (R12.Goal.spec_sequenceNumber, R14.Goal.spec_sequenceNumber) integer;

    @ref_mode("referred_to");
    @use_prefix(prefix="goal_", root_name="ID");
    goal_ID: referential (R12.Goal.ID, R14.Goal.ID) integer;

    //! Starting time for this achievement, expressed as the number of seconds
    //! since the beginning of the associated workout session.
    startTime: integer;

    //! Ending time for this achievement, expressed as the number of seconds
    //! since the beginning of the associated workout session.
    endTime: integer;

    preferred identifier is (session_startTime, spec_sequenceNumber, goal_ID, startTime);

    @dialect("oal");
    operation close() is
      @noparse
      // Close this open achievement record by storing the end time, relating this
      //   record as a recorded one and unrelating it as the open one.
      select one goal related by self->Goal[R14.'is_open_for'];
      select one workoutTimer related by goal->WorkoutSession[R11.'is_currently_executing_within']->WorkoutTimer[R8.'is_timed_by'];
      self.endTime = workoutTimer.time;
      unrelate self from goal across R14.'is_open_for';
      relate self to goal across R12.'specifies_achievement_of';
      @endnoparse
    end operation;

  end class;

end;
